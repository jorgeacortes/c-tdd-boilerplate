# Test SCONS script.
# TODO Run all runners after build.
import os
Import('env')
envTest = env.Clone()


# --------------- Support libraries ---------------- #

# Create lib for Unity
envTest.Append(
        CPPPATH =       '../vendor/Unity/src',
)
unityEnv = envTest.Clone()
unity_lib = unityEnv.StaticLibrary(
    'unity',
    '../vendor/Unity/src/unity.c',
    )

# Create lib for Cmock
envTest.Append(
        CPPPATH =       '../vendor/CMock/src',
)
cmockEnv = envTest.Clone()
cmock_lib = unityEnv.StaticLibrary(
    'cmock',
    '../vendor/CMock/src/cmock.c',
    )


# --------------- Tests -------------------------- #

# Take all sources
tests_lib_sources=[
    Glob('mocks/*.c')
]

# Create a lib with all test sources
tests_lib = envTest.StaticLibrary('mytest', tests_lib_sources)

# Libraries for building tests
tests_libs=[ 
    'productioncode_lib',
    tests_lib,
    unity_lib,
    cmock_lib, 
]

# Include paths
tests_CPPATHS = [ 
    "mocks",
]

envTest.Append(
    LIBS = tests_libs,
    CPPPATH = tests_CPPATHS,
)

# And then we compile the test including the library.
runner1_bin = envTest.Program(
    'testRunner1',
    ['runner1.c']
)
